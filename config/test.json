{
  "source": {
    "aet": "TEST_SOURCE",
    "ip": "127.0.0.1",
    "port": 9999
  },

  // define DICOM peers here
  "peers": [
    {
      "aet": "TEST_PEER",
      "ip": "127.0.0.1",
      "port": 4242
    }
  ],

  /*
    Supported Transfer Syntaxes:
    1.2.840.10008.1.2       Implicit VR Endian: Default Transfer Syntax for DICOM    
    1.2.840.10008.1.2.1     Explicit VR Little Endian    
    1.2.840.10008.1.2.2     Explicit VR Big Endian
    1.2.840.10008.1.2.4.50  JPEG Baseline (Process 1) - Lossy JPEG 8-bit Image Compression (image/dicom+jpeg)
    1.2.840.10008.1.2.4.51  JPEG Baseline (Processes 2 & 4) - Lossy JPEG 12-bit Image Compression (image/dicom+jpeg)
    1.2.840.10008.1.2.4.70  JPEG Lossless, Nonhierarchical, First- Order Prediction (image/dicom+jpeg)
    1.2.840.10008.1.2.4.80  JPEG-LS Lossless Image Compression (image/dicom+jpeg-ls)   <-- recommended
    1.2.840.10008.1.2.4.81  JPEG-LS Lossy (Near- Lossless) Image Compression (image/dicom+jpeg-ls)
    1.2.840.10008.1.2.4.90  JPEG 2000 Image Compression (Lossless Only)	 (image/dicom+jp2)
    1.2.840.10008.1.2.4.91  JPEG 2000 Image Compression (image/dicom+jp2)
    1.2.840.10008.1.2.5     RLE Lossless (image/dicom+rle)
  */

  // transfer syntax (e.g. compression of dicom files) used for transmission via wado and proposed to pacs
  "transferSyntax": "1.2.840.10008.1.2.4.50",

  // Set the mimeType to match the selected transferSyntax
  "mimeType": "image/dicom+jpeg",

  // only used for JPEG process 1,2,4
  "lossyQuality": 80,

  // log directory
  "logDir": "./logs",

  // cache directory
  "storagePath": "./data",

  // keep cache alive for how long after storage or -1 to disable
  "cacheRetentionMinutes": 60,

  // webserver port
  "webserverPort": 5000,

  // target PACS supports C-Get (if flase use C-Move instead)
  "useCget": true,

  // define which level to use for C-Move/C-Get fetches: STUDY, SERIES, IMAGE
  "useFetchLevel": "STUDY",

  // number of associations to PACS run in parallel
  "maxAssociations": 4,

  // do not issue c-find if search contains less characters
  "qidoMinChars": 0,
  
  // auto append * for patient name query
  "qidoAppendWildcard": true,

  // enable verbose logging to std::out (contains DIMSE output)
  "verboseLogging": true,

  // only disable when using wadouri instead of wadors
  "fullMeta": true,

  // disabled when empty, otherwise use connection url e.g. ws://localhost:6001
  "websocketUrl": "http://127.0.0.1:6001",

  // this is the secret your dicomweb-websocket-bride needs to configure too, make sure to keep it secret, and of course change it ,-) hint: use https://hashgenerator.de/
  "websocketToken":
    "TEST_WEBSOCKET_TOKEN",

  "secure": false,
  
  "certificatePath": "./cert-crt.pem",

  "certificateKeyPath": "./cert-key.pem",

  "certificateChainPath": "./cert-crt.pem"

}
